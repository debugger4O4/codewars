package kyu_6.error_correction_1_hamming_code.java;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class Should_pass_all_of_these {
    private CodeWars objTF = new CodeWars();
    @Test
    public void test_encode_function() {
        assertEquals("Should work with short word", "000111111000111000000000000111111000000111000111000111111111111000000111", objTF.encode("hey"));
        assertEquals("Should work with longer wordobjTF.encode("The Sensei told me that i can do this kata"));
        assertEquals("Should work with numbers", "000111000111000111000000000000111111000000111111000111111111000000111111000111111111000111000000", objTF.encode("T3st"));
        assertEquals("Should work with special characters", "000111000111000111000000000000111111111111111111000111111111000000111111000111111111000111000000000000111000000000000111000000111000000111000111", objTF.encode("T?st!%"));
    }
    @Test
    public void test_decode_function() {
        assertEquals("Should work with short word", "hey", objTF.decode("100111111000111001000010000111111000000111001111000111110110111000010111"));
        assertEquals("Should work with longer word", "The Sensei told me that i can do this kata", objTF.decode
        assertEquals("Should work with numbers", "T3st", objTF.decode("000111000111000111000001000000111111000000111111000111111111000000111011000111111111000111000000"));
        assertEquals("Should work with special characters", "T?st!%", objTF.decode("000111000111000111000010000000111111111111011111000111111111000000111111000111101111000111000000000000111000000000000111000000111000000111000111"));
    }
}
